services:
  mariadb:
    container_name: mariadb
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: symfony
      MYSQL_DATABASE: symfony
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - symfony
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: symfony
      POSTGRES_DB: symfony
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - symfony
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "root", "-d", "symfony", "-h", "postgres"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  php:
    container_name: php_83
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - symfony
    entrypoint: ["/usr/local/bin/init-db.sh"]
    
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - .:/usr/src/app
      - ./docker/nginx/logs:/var/log/nginx
    depends_on:
      - php
    networks:
      - symfony

  adminer:
    container_name: adminer
    image: adminer:latest
    restart: always
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - symfony
    depends_on:
      - postgres

volumes:
  mariadb_data:
  postgres_data:

networks:
  symfony:
    name: symfony
    driver: bridge
